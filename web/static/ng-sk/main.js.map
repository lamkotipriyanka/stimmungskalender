{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/authenticated.guard.ts","./src/app/bottom-bar/bottom-bar.component.ts","./src/app/bottom-bar/bottom-bar.component.html","./src/app/graph/graph.component.ts","./src/app/graph/graph.component.html","./src/app/graph/pie-chart/pie-chart.component.ts","./src/app/graph/pie-chart/pie-chart.component.html","./src/app/graph/scatter-plot/scatter-plot.component.ts","./src/app/graph/scatter-plot/scatter-plot.component.html","./src/app/home/form/form.component.ts","./src/app/home/form/form.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/mood-entry/mood-entry.component.ts","./src/app/home/mood-entry/mood-entry.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/note-dialog/note-dialog.component.ts","./src/app/note-dialog/note-dialog.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/search/sk-paginator-intl.ts","./src/app/services/auth.service.ts","./src/app/services/message.service.ts","./src/app/services/settings.service.ts","./src/app/services/stimmungskalender.service.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/shared/api-urls.ts","./src/app/shared/error-msg/error-msg.component.ts","./src/app/shared/error-msg/error-msg.component.html","./src/app/shared/forms.ts","./src/app/shared/language.ts","./src/app/shared/material-meta/material-meta.module.ts","./src/app/shared/messages.ts","./src/app/shared/model/sk/moods.ts","./src/app/shared/pagination.ts","./src/app/shared/periods.ts","./src/app/shared/pipes/enum-to-array.pipe.ts","./src/app/shared/pipes/enum-value.pipe.ts","./src/app/shared/pipes/mood-enum.pipe.ts","./src/app/shared/pipes/repeat-char.pipe.ts","./src/app/shared/pipes/str-to-date.pipe.ts","./src/app/shared/pipes/str-to-week-end-date.pipe.ts","./src/app/shared/pipes/week-number.pipe.ts","./src/app/shared/query-params.ts","./src/app/shared/sk-date-adapter.ts","./src/app/transloco-root.module.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { GraphComponent } from './graph/graph.component';\nimport { AuthenticatedGuard } from './auth/authenticated.guard';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SearchComponent } from './search/search.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    path: '',\n    children: [{ path: 'home', component: HomeComponent }],\n    canActivate: [AuthenticatedGuard],\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: 'graph', component: GraphComponent },\n  { path: '**', redirectTo: 'home' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<app-navbar></app-navbar>\n","import { DatePipe, registerLocaleData } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport localeDe from '@angular/common/locales/de';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { BottomBarComponent } from './bottom-bar/bottom-bar.component';\nimport { GraphComponent } from './graph/graph.component';\nimport { PieChartComponent } from './graph/pie-chart/pie-chart.component';\nimport { ScatterPlotComponent } from './graph/scatter-plot/scatter-plot.component';\nimport { FormComponent } from './home/form/form.component';\nimport { HomeComponent } from './home/home.component';\nimport { MoodEntryComponent } from './home/mood-entry/mood-entry.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { NoteDialogComponent } from './note-dialog/note-dialog.component';\nimport { SearchComponent } from './search/search.component';\nimport { SkPaginatorIntl } from './search/sk-paginator-intl';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ErrorMsgComponent } from './shared/error-msg/error-msg.component';\nimport { MaterialMetaModule } from './shared/material-meta/material-meta.module';\nimport { EnumToArrayPipe } from './shared/pipes/enum-to-array.pipe';\nimport { EnumValuePipe } from './shared/pipes/enum-value.pipe';\nimport { MoodEnumPipe } from './shared/pipes/mood-enum.pipe';\nimport { RepeatCharPipe } from './shared/pipes/repeat-char.pipe';\nimport { StrToDatePipe } from './shared/pipes/str-to-date.pipe';\nimport { StrToWeekEndDatePipe } from './shared/pipes/str-to-week-end-date.pipe';\nimport { WeekNumberPipe } from './shared/pipes/week-number.pipe';\nimport { SkDateAdapter } from './shared/sk-date-adapter';\nimport { TranslocoRootModule } from './transloco-root.module';\n\nregisterLocaleData(localeDe);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    EnumToArrayPipe,\n    ErrorMsgComponent,\n    NavbarComponent,\n    MoodEntryComponent,\n    MoodEnumPipe,\n    EnumValuePipe,\n    NoteDialogComponent,\n    RepeatCharPipe,\n    FormComponent,\n    SearchComponent,\n    WeekNumberPipe,\n    StrToDatePipe,\n    StrToWeekEndDatePipe,\n    SettingsComponent,\n    BottomBarComponent,\n    GraphComponent,\n    ScatterPlotComponent,\n    PieChartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MaterialMetaModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    TranslocoRootModule,\n    NgApexchartsModule,\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'de' },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    DatePipe,\n    { provide: DateAdapter, useClass: SkDateAdapter },\n    { provide: MatPaginatorIntl, useClass: SkPaginatorIntl },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { mergeMap, Observable, shareReplay } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { LOGIN_URL } from '../shared/api-urls';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    if (req.url === LOGIN_URL) {\n      // Do nothing, this is a call to the oauth api\n      return next.handle(req);\n    }\n\n    return this.authService.currentUser.pipe(\n      shareReplay(1),\n      mergeMap((user) => {\n        if (user.token) {\n          req = req.clone({\n            setHeaders: {\n              Authorization: `Bearer ${user.token || ''}`,\n            },\n          });\n        }\n        return next.handle(req);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { map, Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.authService.isLoggedIn().pipe(\n      map((loggedIn) => {\n        if (!loggedIn) {\n          void this.router.navigate(['/login'], {\n            queryParams: { returnUrl: state.url },\n          });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-bottom-bar',\n  templateUrl: './bottom-bar.component.html',\n  styleUrls: ['./bottom-bar.component.scss'],\n})\nexport class BottomBarComponent {\n  username = new Observable<string>();\n\n  constructor(private authService: AuthService) {\n    this.username = this.authService.currentUser.pipe(\n      map((user) => user.username)\n    );\n  }\n\n  onLogout(): void {\n    this.authService.logout();\n  }\n}\n","<div class=\"app-main dark-theme mat-app-background bottom-bar\">\n  <mat-toolbar\n    class=\"toolbar\"\n    fxLayout=\"row\"\n    fxLayoutGap=\"2rem\"\n    fxLayoutAlign=\"center center\"\n    *ngIf=\"username | async as name\"\n  >\n    <div>{{ \"logged_in_as\" | transloco }}: {{ name }}</div>\n    <div>\n      <button mat-button (click)=\"onLogout()\">\n        <mat-icon>logout</mat-icon>\n        <span fxHide.lt-md> {{ \"logout\" | transloco }} </span>\n      </button>\n    </div>\n  </mat-toolbar>\n</div>\n","import { Component } from '@angular/core';\nimport { Periods } from '../shared/periods';\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.scss'],\n})\nexport class GraphComponent {\n  periods = Periods;\n}\n","<app-scatter-plot></app-scatter-plot>\n\n<div\n  fxLayout=\"row\"\n  fxLayout.lt-md=\"column\"\n  fxLayoutGap.lt-md=\"1rem\"\n  fxLayoutAlign=\"space-between\"\n>\n  <div *ngFor=\"let period of periods | enumValue\">\n    <app-pie-chart [period]=\"period\"></app-pie-chart>\n  </div>\n</div>\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport {\n  ApexChart,\n  ApexNonAxisChartSeries,\n  ApexResponsive,\n  ApexTheme,\n  ChartComponent,\n} from 'ng-apexcharts';\nimport { map, Observable } from 'rxjs';\nimport { StimmungskalenderService } from 'src/app/services/stimmungskalender.service';\nimport { Moods } from 'src/app/shared/model/sk/moods';\nimport { Periods } from 'src/app/shared/periods';\n\nexport type ChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  responsive: ApexResponsive[];\n  labels: string[];\n  theme: ApexTheme;\n};\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss'],\n})\nexport class PieChartComponent implements OnInit {\n  @Input() period = '';\n  @ViewChild('chart') chart: ChartComponent = <ChartComponent>{};\n  chartOptions$ = new Observable<ChartOptions>();\n  header = '';\n\n  constructor(\n    private skService: StimmungskalenderService,\n    private translocoService: TranslocoService\n  ) {}\n\n  ngOnInit(): void {\n    this.chartOptions$ = this.skService.getPieChartGraph(this.period).pipe(\n      map((data) => {\n        const chartOptions = this.defaultGraph();\n        chartOptions.series = data.values;\n        const labels: string[] = [];\n        data.label_numbers.forEach((val) =>\n          labels.push(\n            this.translocoService.translate(Moods[+val].toLowerCase())\n          )\n        );\n        chartOptions.labels = labels;\n        return chartOptions;\n      })\n    );\n\n    this.setHeader();\n  }\n\n  private setHeader() {\n    if (this.period === Periods.DAY) {\n      this.header = this.translocoService.translate('day_moods');\n    } else if (this.period === Periods.NIGHT) {\n      this.header = this.translocoService.translate('night_moods');\n    }\n  }\n\n  private defaultGraph(): ChartOptions {\n    return {\n      series: [],\n      chart: {\n        width: 380,\n        type: 'pie',\n      },\n      labels: [],\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200,\n            },\n            legend: {\n              position: 'bottom',\n            },\n          },\n        },\n      ],\n      theme: {\n        mode: 'dark',\n      },\n    } as ChartOptions;\n  }\n}\n","<h2>{{ header }}</h2>\n\n<apx-chart\n  *ngIf=\"chartOptions$ | async as chartOptions\"\n  [series]=\"chartOptions.series\"\n  [chart]=\"chartOptions.chart\"\n  [labels]=\"chartOptions.labels\"\n  [responsive]=\"chartOptions.responsive\"\n  [theme]=\"chartOptions.theme\"\n></apx-chart>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport {\n  ApexChart,\n  ApexDataLabels,\n  ApexGrid,\n  ApexAxisChartSeries,\n  ApexStroke,\n  ApexTheme,\n  ApexTitleSubtitle,\n  ApexTooltip,\n  ApexXAxis,\n  ApexYAxis,\n  ChartComponent,\n} from 'ng-apexcharts';\nimport { Observable, map } from 'rxjs';\nimport { StimmungskalenderService } from 'src/app/services/stimmungskalender.service';\nimport { Moods } from 'src/app/shared/model/sk/moods';\n\nexport type ChartOptions = {\n  // annotations: ApexAnnotations;\n  chart: ApexChart;\n  colors: string[];\n  dataLabels: ApexDataLabels;\n  // fill: ApexFill;\n  grid: ApexGrid;\n  // labels: string[];\n  // legend: ApexLegend;\n  // plotOptions: ApexPlotOptions;\n  // responsive: ApexResponsive[];\n  series: ApexAxisChartSeries;\n  // states: ApexStates;\n  stroke: ApexStroke;\n  // subtitle: ApexTitleSubtitle;\n  theme: ApexTheme;\n  title: ApexTitleSubtitle;\n  tooltip: ApexTooltip;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis | ApexYAxis[];\n};\n\n@Component({\n  selector: 'app-scatter-plot',\n  templateUrl: './scatter-plot.component.html',\n  styleUrls: ['./scatter-plot.component.scss'],\n})\nexport class ScatterPlotComponent implements OnInit {\n  @ViewChild('chart') chart: ChartComponent = <ChartComponent>{};\n  chartOptions$ = new Observable<ChartOptions>();\n\n  constructor(\n    private skService: StimmungskalenderService,\n    private translocoService: TranslocoService\n  ) {}\n\n  ngOnInit(): void {\n    this.chartOptions$ = this.skService.getScatterGraph().pipe(\n      map((data) => {\n        const chartOptions = this.defaultGraph();\n        chartOptions.xaxis.categories = data.map((i) => i.x);\n        chartOptions.series[0].name = this.translocoService.translate('day');\n        chartOptions.series[0].data = data.map((i) => i.y.day);\n        chartOptions.series[1].name = this.translocoService.translate('night');\n        chartOptions.series[1].data = data.map((i) => i.y.night);\n        return chartOptions;\n      })\n    );\n  }\n\n  private defaultGraph(): ChartOptions {\n    return {\n      series: [\n        {\n          name: '',\n          data: [],\n        },\n        {\n          name: '',\n          data: [],\n        },\n      ],\n      chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false,\n        },\n      },\n      colors: ['#546E7A', '#E91E63'],\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: 'straight',\n      },\n      theme: {\n        mode: 'dark',\n      },\n      title: {\n        text: this.translocoService.translate('scatterplot'),\n        align: 'left',\n      },\n      tooltip: {\n        enabled: true,\n      },\n      grid: {\n        row: {\n          colors: [], // takes an array which will be repeated on columns\n          opacity: 1,\n        },\n      },\n      xaxis: {\n        categories: [],\n      },\n      yaxis: {\n        labels: {\n          formatter: (value) => {\n            return this.translocoService.translate(Moods[+value].toLowerCase());\n          },\n        },\n      },\n    } as ChartOptions;\n  }\n}\n","<apx-chart\n  *ngIf=\"chartOptions$ | async as chartOptions\"\n  [chart]=\"chartOptions.chart\"\n  [colors]=\"chartOptions.colors\"\n  [dataLabels]=\"chartOptions.dataLabels\"\n  [grid]=\"chartOptions.grid\"\n  [series]=\"chartOptions.series\"\n  [stroke]=\"chartOptions.stroke\"\n  [theme]=\"chartOptions.theme\"\n  [title]=\"chartOptions.title\"\n  [tooltip]=\"chartOptions.tooltip\"\n  [xaxis]=\"chartOptions.xaxis\"\n  [yaxis]=\"chartOptions.yaxis\"\n></apx-chart>\n","import { Component, Input } from '@angular/core';\nimport { MoodTable } from 'src/app/shared/model/sk/mood-table';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent {\n  @Input() form = '';\n  @Input() moodTable = <MoodTable>{};\n  visible = true;\n}\n","<mat-card>\n  <mat-card-header fxLayoutAlign=\"center center\">\n    <mat-card-title\n      (click)=\"visible = !visible\"\n      title=\"{{ 'click_to_toggle' | transloco }}\"\n    >\n      {{ (form === \"night\" ? \"night_header\" : \"day_header\") | transloco }}\n\n      <span *ngIf=\"form === 'night'; else day\">🌙</span>\n      <ng-template #day>☀️</ng-template>\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content\n    *ngIf=\"visible\"\n    fxLayout=\"row\"\n    fxLayout.lt-sm=\"column\"\n    fxLayoutAlign=\"space-between space-between\"\n    fxLayoutGap.lt-md=\"5rem\"\n  >\n    <app-mood-entry\n      fxFlex\n      [entry]=\"entry\"\n      [form]=\"form\"\n      *ngFor=\"let entry of moodTable.days_of_week\"\n    ></app-mood-entry>\n  </mat-card-content>\n</mat-card>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { addWeeks, format, parse, subWeeks } from 'date-fns';\nimport { catchError, Observable, of, tap } from 'rxjs';\nimport { NoteDialogComponent } from '../note-dialog/note-dialog.component';\nimport { MessageService } from '../services/message.service';\nimport { StimmungskalenderService } from '../services/stimmungskalender.service';\nimport { ErrorMsg } from '../shared/error-msg';\nimport { Forms } from '../shared/forms';\nimport { Messages } from '../shared/messages';\nimport { MoodTable } from '../shared/model/sk/mood-table';\nimport { Moods } from '../shared/model/sk/moods';\nimport { Week } from '../shared/model/sk/week';\nimport { QP_START_DAY } from '../shared/query-params';\nimport { StandoutData } from './../shared/model/sk/standout-data';\n\nconst SK_DATE_FORMAT = 'yyyy-MM-dd';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  moodTable$ = new Observable<MoodTable>();\n  standoutData$ = new Observable<StandoutData[]>();\n  moods = Moods;\n  forms = Forms;\n  error: ErrorMsg | null = null;\n  loading = true;\n  currentWeek = new Date();\n\n  constructor(\n    private skService: StimmungskalenderService,\n    private dialog: MatDialog,\n    private msgService: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.standoutData$ = this.skService.getStandoutData();\n\n    this.buildMsgListener();\n    this.route.queryParams.subscribe((params: Params) => {\n      if (params.hasOwnProperty(QP_START_DAY)) {\n        this.currentWeek = parse(\n          <string>params[QP_START_DAY],\n          SK_DATE_FORMAT,\n          new Date()\n        );\n      } else {\n        this.currentWeek = new Date();\n      }\n      this.loadEntries();\n    });\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyDown($event: KeyboardEvent): void {\n    const inputElement = $event.target as HTMLInputElement;\n\n    /* We ignore keys coming from input fields */\n    if (\n      inputElement.tagName === 'MAT-SLIDER' ||\n      inputElement.tagName === 'INPUT' ||\n      inputElement.tagName === 'TEXTAREA'\n    ) {\n      return;\n    }\n\n    /* We don't want to interfere with non-ampd-shortcuts like Alt+Tab or Ctrl+R */\n    if ($event.ctrlKey || $event.metaKey) {\n      return;\n    }\n\n    /* We don't want to interfere with tab changes */\n    if ($event.altKey) {\n      return;\n    }\n\n    switch ($event.key) {\n      case 'a': // Open note dialog\n        this.openNoteDialog();\n        break;\n      case '<':\n      case 'ArrowLeft': // Left: Previous track\n        this.prevWeek();\n        break;\n      case '>':\n      case 'ArrowRight': // Right: Next track\n        this.nextWeek();\n        break;\n      default:\n        // Ignore it\n        return;\n    }\n\n    $event.preventDefault();\n  }\n\n  openNoteDialog(): void {\n    this.moodTable$.subscribe((moodTable) => {\n      const dialogRef = this.dialog.open(NoteDialogComponent, {\n        width: '75%',\n        data: {\n          week_date: moodTable.week.week_date,\n          note: moodTable.week.note,\n        } as Week,\n      });\n      dialogRef\n        .afterClosed()\n        .subscribe(() => this.msgService.sendMessage(Messages.RELOAD));\n    });\n  }\n\n  nextWeek(): void {\n    this.currentWeek = addWeeks(this.currentWeek, 1);\n    void this.router\n      .navigate([], {\n        queryParams: {\n          [QP_START_DAY]: format(this.currentWeek, SK_DATE_FORMAT),\n        },\n      })\n      .then(() => this.msgService.sendMessage(Messages.RELOAD));\n  }\n\n  prevWeek(): void {\n    this.currentWeek = subWeeks(this.currentWeek, 1);\n    void this.router\n      .navigate([], {\n        queryParams: {\n          [QP_START_DAY]: format(this.currentWeek, SK_DATE_FORMAT),\n        },\n      })\n      .then(() => this.msgService.sendMessage(Messages.RELOAD));\n  }\n\n  private loadEntries(): void {\n    this.moodTable$ = this.skService\n      .getMoodTable(format(this.currentWeek, SK_DATE_FORMAT))\n      .pipe(\n        catchError((err: HttpErrorResponse) => {\n          this.error = {\n            title: 'Got an error while fetching entries',\n            detail: err.message,\n          } as ErrorMsg;\n          return of(<MoodTable>{});\n        }),\n        tap(() => (this.loading = false))\n      );\n  }\n\n  private buildMsgListener(): void {\n    this.msgService.getMessages().subscribe((msg) => {\n      switch (msg) {\n        case Messages.RELOAD:\n          this.loadEntries();\n          break;\n        default:\n          // Ignore it\n          return;\n      }\n    });\n  }\n}\n","<!-- Loading animaiton -->\n<div fxLayoutAlign=\"center center\" *ngIf=\"loading\">\n  <mat-spinner></mat-spinner>\n</div>\n\n<div\n  fxLayout=\"column\"\n  fxLayoutGap=\"2.5rem\"\n  *ngIf=\"moodTable$ | async as moodTable\"\n>\n  <!-- Error handling -->\n  <div fxFlex *ngIf=\"error\">\n    <app-error-msg [error]=\"error\"></app-error-msg>\n    <mat-divider></mat-divider>\n  </div>\n\n  <!-- Week table header -->\n  <div\n    fxLayout=\"row\"\n    fxLayout.lt-sm=\"column\"\n    fxLayoutAlign=\"space-between\"\n    fxLayoutGap=\"1rem\"\n  >\n    <div fxLayoutAlign=\"center center\">\n      {{ \"week\" | transloco }} #{{ currentWeek | date: \"w\" }}\n    </div>\n    <div fxLayoutAlign=\"center center\">\n      {{ moodTable.week.week_date | strToDate | date: \"shortDate\" }} —\n      {{ moodTable.week.week_date | strToWeekEndDate | date: \"shortDate\" }}\n    </div>\n    <div fxLayoutAlign=\"center center\" fxLayoutGap=\"0.5rem\">\n      <button\n        mat-stroked-button\n        (click)=\"openNoteDialog()\"\n        [color]=\"moodTable.week.note ? 'accent' : ''\"\n      >\n        {{ \"note\" | transloco }}\n      </button>\n      <button mat-stroked-button (click)=\"prevWeek()\">\n        {{ \"prev\" | transloco }}\n      </button>\n      <button mat-stroked-button (click)=\"nextWeek()\">\n        {{ \"next\" | transloco }}\n      </button>\n    </div>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <mat-card *ngIf=\"moodTable.week.note\">\n    <mat-card-content>\n      <p>\n        {{ moodTable.week.note }}\n      </p>\n    </mat-card-content>\n  </mat-card>\n\n  <div fxLayout=\"column\" fxLayoutGap=\"2.5rem\">\n    <!-- ButtonToggleGroup-->\n    <div *ngFor=\"let form of forms | enumValue\">\n      <app-form [form]=\"form\" [moodTable]=\"moodTable\"></app-form>\n    </div>\n  </div>\n\n  <div\n    fxLayout=\"row\"\n    fxLayout.lt-md=\"column\"\n    fxLayoutGap.lt-md=\"1rem\"\n    fxLayoutAlign=\"space-between\"\n    *ngIf=\"standoutData$ | async as standoutData\"\n  >\n    <mat-card\n      *ngFor=\"let day of standoutData\"\n      class=\"alert\"\n      [class]=\"day.css_class\"\n    >\n      <mat-card-content>\n        {{ day.label | transloco }}: {{ day.entry.day | date: \"shortDate\" }}\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import {\n  BreakpointObserver,\n  Breakpoints,\n  BreakpointState,\n} from '@angular/cdk/layout';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { catchError, map, Observable, of } from 'rxjs';\n\nimport { MessageService } from 'src/app/services/message.service';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { StimmungskalenderService } from 'src/app/services/stimmungskalender.service';\nimport { ErrorMsg } from 'src/app/shared/error-msg';\nimport { Messages } from 'src/app/shared/messages';\nimport { InputEntry } from 'src/app/shared/model/sk/input-entry';\nimport { WeekDayEntry } from 'src/app/shared/model/sk/week-day-entry';\nimport { Moods } from '../../shared/model/sk/moods';\n@Component({\n  selector: 'app-mood-entry',\n  templateUrl: './mood-entry.component.html',\n  styleUrls: ['./mood-entry.component.scss'],\n})\nexport class MoodEntryComponent implements OnInit {\n  @Input() entry: WeekDayEntry = <WeekDayEntry>{};\n  @Input() form = '';\n  moods = Moods;\n  selectedVal = '';\n  buttonsDisabled = false;\n  error: ErrorMsg | null = null;\n  isMobile$ = new Observable<boolean>();\n  colorsEnabled: Observable<boolean>;\n\n  constructor(\n    private skService: StimmungskalenderService,\n    private msgService: MessageService,\n    private breakpointObserver: BreakpointObserver,\n    private settingsService: SettingsService\n  ) {\n    this.colorsEnabled = this.settingsService.colorsEnabled;\n  }\n\n  ngOnInit(): void {\n    if (this.form === 'night') {\n      this.selectedVal = String(this.entry.mood_night);\n    } else if (this.form === 'day') {\n      this.selectedVal = String(this.entry.mood_day);\n    }\n\n    this.checkMobile();\n  }\n\n  checkMobile(): void {\n    this.isMobile$ = this.breakpointObserver\n      .observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge,\n        Breakpoints.Handset,\n        Breakpoints.Tablet,\n        Breakpoints.Web,\n        Breakpoints.HandsetPortrait,\n        Breakpoints.TabletPortrait,\n        Breakpoints.WebPortrait,\n        Breakpoints.HandsetLandscape,\n        Breakpoints.TabletLandscape,\n        Breakpoints.WebLandscape,\n      ])\n      .pipe(\n        map((breakpoint) => {\n          if (\n            breakpoint.breakpoints[Breakpoints.XSmall] ||\n            breakpoint.breakpoints[Breakpoints.Small]\n          ) {\n            return true;\n          } else {\n            return false;\n          }\n        })\n      );\n  }\n\n  getCoverCssClass(): Observable<string> {\n    return this.breakpointObserver\n      .observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge,\n      ])\n      .pipe(\n        map((breakpoint: BreakpointState) => {\n          if (breakpoint.breakpoints[Breakpoints.XSmall]) {\n            return 'cover-xsmall';\n          }\n          if (breakpoint.breakpoints[Breakpoints.Small]) {\n            return 'cover-small';\n          }\n          if (breakpoint.breakpoints[Breakpoints.Medium]) {\n            return 'cover-medium';\n          }\n          if (breakpoint.breakpoints[Breakpoints.Large]) {\n            return 'cover-large';\n          }\n          if (breakpoint.breakpoints[Breakpoints.XLarge]) {\n            return 'cover-xlarge';\n          }\n          return 'cover-small';\n        })\n      );\n  }\n\n  onButtonToggleClick(mood: string, day: string): void {\n    this.buttonsDisabled = true;\n    if (mood === this.selectedVal) {\n      this.selectedVal = '';\n    } else {\n      this.selectedVal = mood;\n    }\n    this.skService\n      .saveEntry({\n        mood: +mood,\n        period: this.form,\n        day: day,\n      } as InputEntry)\n      .pipe(\n        catchError((err: HttpErrorResponse) => {\n          this.error = {\n            title: 'Got an error while setting mood',\n            detail: err.message,\n          } as ErrorMsg;\n          return of(<WeekDayEntry>{});\n        })\n      )\n      .subscribe(() => {\n        this.buttonsDisabled = false;\n        this.msgService.sendMessage(Messages.RELOAD);\n      });\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"center center\">\n  <div\n    class=\"date-header\"\n    fxLayout=\"column\"\n    fxLayout.lt-md=\"row\"\n    fxLayoutAlign=\"center center\"\n    fxLayoutGap=\"1rem\"\n  >\n    <div>\n      {{ entry.day | date: \"EEEE\" }}\n    </div>\n    <div>{{ entry.day | date: \"dd.LL.\" }}</div>\n  </div>\n  <mat-button-toggle-group\n    [vertical]=\"(isMobile$ | async) === false\"\n    #group=\"matButtonToggleGroup\"\n    [class.mobile]=\"isMobile$ | async\"\n    [value]=\"selectedVal\"\n    (click)=\"onButtonToggleClick(group.value, entry.day)\"\n  >\n    <mat-button-toggle\n      fxFlex.lt-md\n      [value]=\"mood\"\n      *ngFor=\"let mood of moods | enumToArray\"\n      [class.active]=\"+mood === +selectedVal\"\n      [ngClass]=\"(colorsEnabled | async) ? 'btn-mood mood-' + mood : ''\"\n      title=\"{{ mood | moodEnum | transloco }}\"\n    >\n      <span fxHide.lt-md>{{ mood | moodEnum | transloco }}</span>\n      <span *ngIf=\"(isMobile$ | async) && +mood === +selectedVal\">X</span>\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError, Observable, of } from 'rxjs';\nimport { User } from '../shared/model/auth/user';\nimport { AuthService } from '../services/auth.service';\nimport { ErrorMsg } from '../shared/error-msg';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  loginValid = true;\n  username = '';\n  password = '';\n  user = new Observable<User>();\n  error: ErrorMsg | null = null;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  public onSubmit(): void {\n    this.authService\n      .login(this.username, this.password)\n      .pipe(\n        catchError((err: HttpErrorResponse) => {\n          this.error = {\n            title: 'Got an error logging in',\n            detail: err.message,\n          } as ErrorMsg;\n          return of([]);\n        })\n      )\n      .subscribe(() => {\n        void this.router.navigate(['/home']);\n      });\n    this.user = this.authService.currentUser;\n  }\n\n  public onLogout(): void {\n    this.authService.logout();\n  }\n}\n","<div fxLayout=\"column\" fxFlexAlign=\"stretch\" fxLayoutAlign=\"center center\">\n  <!-- Error handling -->\n  <div fxFlex *ngIf=\"error\">\n    <app-error-msg [error]=\"error\"></app-error-msg>\n    <mat-divider></mat-divider>\n  </div>\n\n  <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          <h1>Stimmungskalender</h1>\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-error *ngIf=\"!loginValid\">\n          The username and password were not recognized\n        </mat-error>\n        <mat-form-field>\n          <input\n            matInput\n            [placeholder]=\"'Username' | transloco\"\n            [(ngModel)]=\"username\"\n            name=\"username\"\n            required\n          />\n          <mat-error> Please provide a valid username </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input\n            matInput\n            type=\"password\"\n            [placeholder]=\"'Password' | transloco\"\n            [(ngModel)]=\"password\"\n            name=\"password\"\n            required\n          />\n          <mat-error> Please provide a valid password </mat-error>\n        </mat-form-field>\n      </mat-card-content>\n      <mat-card-actions>\n        <button\n          mat-raised-button\n          color=\"primary\"\n          [disabled]=\"!loginForm.form.valid\"\n          mat-button\n        >\n          {{ \"Log in\" | transloco }}\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </form>\n</div>\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent {\n  loggedIn = new Observable<boolean>();\n\n  constructor(private authService: AuthService) {\n    this.loggedIn = this.authService.isLoggedIn();\n  }\n\n  onLogout(): void {\n    this.authService.logout();\n  }\n}\n","<div class=\"app-main dark-theme mat-app-background\">\n  <mat-toolbar class=\"toolbar\" color=\"primary\">\n    <div fxFlex.gt-md fxLayout=\"row\">\n      <button mat-button [routerLink]=\"['/home']\">\n        <mat-icon>home</mat-icon>\n        <span fxHide.lt-md> Stimmungskalender </span>\n      </button>\n      <button mat-button [routerLink]=\"['/graph']\" *ngIf=\"loggedIn | async\">\n        <mat-icon>bar_chart</mat-icon>\n        <span fxHide.lt-md> {{ \"graph\" | transloco }} </span>\n      </button>\n      <button mat-button [routerLink]=\"['/search']\" *ngIf=\"loggedIn | async\">\n        <mat-icon>search</mat-icon>\n        <span fxHide.lt-md> {{ \"search\" | transloco }} </span>\n      </button>\n      <button mat-button [routerLink]=\"['/settings']\" *ngIf=\"loggedIn | async\">\n        <mat-icon>settings</mat-icon>\n        <span fxHide.lt-md> {{ \"settings\" | transloco }} </span>\n      </button>\n    </div>\n    <button mat-button (click)=\"onLogout()\" *ngIf=\"loggedIn | async\">\n      <mat-icon>logout</mat-icon>\n      <span fxHide.lt-md> {{ \"logout\" | transloco }} </span>\n    </button>\n  </mat-toolbar>\n  <div class=\"app-content\" fxLayout=\"column\">\n    <router-outlet></router-outlet>\n    <div fxFlex></div>\n  </div>\n  <app-bottom-bar></app-bottom-bar>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Week } from '../shared/model/sk/week';\nimport { StimmungskalenderService } from '../services/stimmungskalender.service';\n\n@Component({\n  selector: 'app-note-dialog',\n  templateUrl: './note-dialog.component.html',\n  styleUrls: ['./note-dialog.component.scss'],\n})\nexport class NoteDialogComponent {\n  note: string;\n\n  constructor(\n    private skService: StimmungskalenderService,\n    public dialogRef: MatDialogRef<NoteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Week\n  ) {\n    this.note = data.note;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  saveNote(): void {\n    this.dialogRef.close();\n    this.skService\n      .saveNote({\n        week_date: this.data.week_date,\n        note: this.note,\n      } as Week)\n      .subscribe({\n        complete: () => void 0, // completeHandler\n        error: () => void 0, // errorHandler\n        next: () => void 0, // nextHandler\n      });\n  }\n}\n","<div mat-dialog-content>\n  <mat-form-field appearance=\"fill\" fxFlex>\n    <mat-label>{{ \"note\" | transloco }}</mat-label>\n    <textarea\n      rows=\"10\"\n      matInput\n      [placeholder]=\"'what_happened_this_week' | transloco\"\n      [(ngModel)]=\"note\"\n    ></textarea>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-stroked-button (click)=\"saveNote()\" color=\"primary\">\n    {{ \"save\" | transloco }}\n  </button>\n  <button mat-stroked-button (click)=\"onNoClick()\">\n    {{ \"Close\" | transloco }}\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DateRange } from '@angular/material/datepicker';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { format } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { StimmungskalenderService } from '../services/stimmungskalender.service';\nimport { Moods } from '../shared/model/sk/moods';\nimport { Week } from '../shared/model/sk/week';\nimport { SearchForm } from '../shared/search-form';\nimport { PAGE_SIZE_OPTIONS, PAGINATION_TO } from './../shared/pagination';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  weeks$ = new Observable<Week[]>();\n  selectedMood = 0;\n  moods = Moods;\n  pageSizeOptions = PAGE_SIZE_OPTIONS;\n  paginationFrom = 0;\n  paginationTo = PAGINATION_TO;\n\n  constructor(\n    private skService: StimmungskalenderService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((queryParams) => {\n      const start = <string>queryParams.get('start_day') || '';\n      const end = <string>queryParams.get('end_day') || '';\n      const mood = +(queryParams.get('mood') || 0);\n      const searchTerm = <string>queryParams.get('term') || '';\n\n      const sf = {\n        start: start,\n        end: end,\n        mood: mood,\n        searchTerm: searchTerm,\n      } as SearchForm;\n      this.weeks$ = this.skService.search(sf);\n    });\n\n    this.range.valueChanges.subscribe((event: DateRange<Date>) => {\n      if (event.start) {\n        void this.router.navigate(['search'], {\n          queryParams: { start_day: format(event.start, 'yyyy-MM-dd') },\n          queryParamsHandling: 'merge',\n        });\n      }\n      if (event.end) {\n        void this.router.navigate(['search'], {\n          queryParams: { end_day: format(event.end, 'yyyy-MM-dd') },\n          queryParamsHandling: 'merge',\n        });\n      }\n    });\n  }\n\n  onSelectionChange(mood: number): void {\n    void this.router.navigate(['search'], {\n      queryParams: { mood: mood },\n      queryParamsHandling: 'merge',\n    });\n  }\n\n  getPaginatorData(event: PageEvent): PageEvent {\n    this.paginationFrom = event.pageIndex * event.pageSize;\n    this.paginationTo = this.paginationFrom + event.pageSize;\n    return event;\n  }\n}\n","<h1>{{ \"search\" | transloco }}</h1>\n\n<mat-divider></mat-divider>\n\n<!-- Filter form -->\n<mat-card>\n  <mat-card-content\n    fxLayout=\"row\"\n    fxLayout.lt-md=\"column\"\n    fxLayoutAlign=\"space-between\"\n  >\n    <mat-form-field appearance=\"fill\">\n      <mat-label>{{ \"Date:\" | transloco }}</mat-label>\n      <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n        <input matStartDate formControlName=\"start\" placeholder=\"Start date\" />\n        <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\n      </mat-date-range-input>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-date-range-picker #picker></mat-date-range-picker>\n\n      <mat-error *ngIf=\"range.controls['start'].hasError('matStartDateInvalid')\"\n        >Invalid start date</mat-error\n      >\n      <mat-error *ngIf=\"range.controls['end'].hasError('matEndDateInvalid')\"\n        >Invalid end date</mat-error\n      >\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>{{ \"mood\" | transloco }}</mat-label>\n      <mat-select\n        [(value)]=\"selectedMood\"\n        (selectionChange)=\"onSelectionChange($event.value)\"\n      >\n        <mat-option>—</mat-option>\n        <mat-option *ngFor=\"let mood of moods | enumToArray\" [value]=\"+mood\">\n          {{ mood | moodEnum | transloco }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>{{ \"search_term\" | transloco }}</mat-label>\n      <input matInput />\n    </mat-form-field>\n  </mat-card-content>\n</mat-card>\n\n<mat-divider class=\"spaced-divider\"></mat-divider>\n\n<div fxLayout=\"column\" fxLayoutGap=\"2.5rem\" *ngIf=\"weeks$ | async as weeks\">\n  <mat-card *ngFor=\"let week of weeks | slice: paginationFrom:paginationTo\">\n    <mat-card-title\n      >{{ \"week\" | transloco }} #{{\n        week.week_date | weekNumber\n      }}</mat-card-title\n    >\n    <mat-card-subtitle>\n      {{ week.week_date | strToWeekEndDate | date: \"shortDate\" }} —\n      {{ week.week_date | strToWeekEndDate | date: \"shortDate\" }}\n    </mat-card-subtitle>\n    <mat-card-content>\n      <pre>{{ week.note }}</pre>\n    </mat-card-content>\n    <mat-card-actions>\n      <button\n        mat-stroked-button\n        [routerLink]=\"['/home']\"\n        [queryParams]=\"{ start_day: week.week_date }\"\n      >\n        {{ \"jump_to_week\" | transloco }}\n      </button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-paginator\n    [length]=\"weeks.length\"\n    (page)=\"getPaginatorData($event)\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    showFirstLastButtons=\"true\"\n  >\n  </mat-paginator>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkPaginatorIntl implements MatPaginatorIntl {\n  changes = new Subject<void>();\n\n  // For internationalization, the `$localize` function from\n  // the `@angular/localize` package can be used.\n  firstPageLabel: string;\n  itemsPerPageLabel: string;\n  lastPageLabel: string;\n\n  // You can set labels to an arbitrary string too, or dynamically compute\n  // it through other third-party internationalization libraries.\n  nextPageLabel: string;\n  previousPageLabel: string;\n\n  constructor(private translocoService: TranslocoService) {\n    this.firstPageLabel = this.translocoService.translate('first_page');\n    this.itemsPerPageLabel = this.translocoService.translate('items_per_page');\n    this.lastPageLabel = this.translocoService.translate('last_page');\n    this.nextPageLabel = this.translocoService.translate('next_page');\n    this.previousPageLabel = this.translocoService.translate('page');\n  }\n\n  getRangeLabel(page: number, pageSize: number, length: number): string {\n    if (length === 0) {\n      return `${this.translocoService.translate('page')} 1 / 1`;\n    }\n    const amountPages = Math.ceil(length / pageSize);\n    return `${this.translocoService.translate('page')} ${\n      page + 1\n    } / ${amountPages}`;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError, map, mergeMap, of, shareReplay } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { LOGIN_URL, LOGOUT_URL, VERIFY_URL } from '../shared/api-urls';\nimport { BackendUser } from '../shared/model/auth/backend-user';\nimport { LoginResponse } from '../shared/model/auth/login-response';\nimport { User } from '../shared/model/auth/user';\n\nexport const LS_USER = 'NG_SK_USER';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public currentUser = new Observable<User>();\n  private currentUserSubject: BehaviorSubject<User>;\n\n  constructor(private http: HttpClient, private router: Router) {\n    const currentUser = localStorage.getItem(LS_USER) || '';\n    try {\n      this.currentUserSubject = new BehaviorSubject<User>(\n        <User>JSON.parse(currentUser)\n      );\n    } catch (err) {\n      this.currentUserSubject = new BehaviorSubject<User>(<User>{});\n    }\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  login(username: string, password: string): Observable<User> {\n    return this.http\n      .post<LoginResponse>(LOGIN_URL, {\n        username,\n        password,\n      })\n      .pipe(\n        map((response) => {\n          const currentUser: User = response.user;\n          currentUser.token = response.access_token;\n          localStorage.setItem(LS_USER, JSON.stringify(currentUser));\n          this.currentUserSubject.next(currentUser);\n          return currentUser;\n        })\n      );\n  }\n\n  isLoggedIn(): Observable<boolean> {\n    return this.currentUser.pipe(map((user) => JSON.stringify(user) !== '{}'));\n  }\n\n  _isLoggedIn(): Observable<boolean> {\n    return this.currentUser.pipe(\n      mergeMap((user) => {\n        if (user.token) {\n          return this.http\n            .post<BackendUser>(VERIFY_URL, {\n              token: user.token,\n            })\n            .pipe(\n              map(() => true),\n              catchError(() => of(false))\n            );\n        } else {\n          return of(false);\n        }\n      })\n    );\n  }\n\n  logout(): void {\n    this.currentUser.pipe(shareReplay(1)).subscribe((user) => {\n      this.http\n        .post<void>(LOGOUT_URL, { token: user.token })\n        .subscribe(() => void 0);\n    });\n    this.currentUserSubject.next(<User>{});\n    localStorage.removeItem(LS_USER);\n    void this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Messages } from '../shared/messages';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  private subject = new Subject<Messages>();\n\n  sendMessage(message: Messages): void {\n    this.subject.next(message);\n  }\n\n  getMessages(): Observable<Messages> {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\nconst LS_KEY_COLORS_ENABLED = 'colorsEnabled';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  colorsEnabled: Observable<boolean>;\n  private colorsEnabled$ = new BehaviorSubject<boolean>(false);\n\n  constructor() {\n    this.colorsEnabled = this.colorsEnabled$.asObservable();\n    this.colorsEnabled$.next(this.loadColorsEnabled());\n  }\n\n  setColorsEnabled(enabled: boolean): void {\n    localStorage.setItem(LS_KEY_COLORS_ENABLED, enabled.toString());\n    this.colorsEnabled$.next(enabled);\n  }\n\n  loadColorsEnabled(): boolean {\n    return Boolean(localStorage.getItem(LS_KEY_COLORS_ENABLED));\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable, switchMap } from 'rxjs';\nimport {\n  ENTRY_DATE_URL,\n  MOOD_TABLE_URL,\n  SAVE_NOTE_URL,\n  SCATTER_GRAPH_URL,\n  SEARCH_URL,\n} from '../shared/api-urls';\nimport { ScatterGraphResponse } from '../shared/model/scatter-graph-response';\nimport { InputEntry } from '../shared/model/sk/input-entry';\nimport { MoodTable } from '../shared/model/sk/mood-table';\nimport { StandoutData } from '../shared/model/sk/standout-data';\nimport { Week } from '../shared/model/sk/week';\nimport { WeekDayEntry } from '../shared/model/sk/week-day-entry';\nimport { SearchForm } from '../shared/search-form';\nimport { PIE_CHART_GRAPH_URL, STANDOUT_DATA_URL } from './../shared/api-urls';\nimport { PieChartGraphResponse } from './../shared/model/pie-chart-graph-response';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StimmungskalenderService {\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  getMoodTable(week = ''): Observable<MoodTable> {\n    week = week.trim();\n    const options = week\n      ? { params: new HttpParams().set('start_day', week) }\n      : {};\n\n    return this.authService.currentUser.pipe(\n      switchMap(() => {\n        return this.http.get<MoodTable>(MOOD_TABLE_URL, options);\n      })\n    );\n  }\n\n  getStandoutData(): Observable<StandoutData[]> {\n    return this.http\n      .get<StandoutData[]>(STANDOUT_DATA_URL)\n      .pipe(map((data) => data.filter((entry) => entry.entry !== null)));\n  }\n\n  getScatterGraph(): Observable<ScatterGraphResponse[]> {\n    return this.http.get<ScatterGraphResponse[]>(SCATTER_GRAPH_URL);\n  }\n\n  getPieChartGraph(period: string): Observable<PieChartGraphResponse> {\n    return this.http.get<PieChartGraphResponse>(\n      `${PIE_CHART_GRAPH_URL}?period=${period}`\n    );\n  }\n\n  saveEntry(entry: InputEntry): Observable<WeekDayEntry> {\n    return this.http.post<WeekDayEntry>(ENTRY_DATE_URL, entry);\n  }\n\n  saveNote(note: Week): Observable<Week> {\n    return this.http.post<Week>(SAVE_NOTE_URL, note);\n  }\n\n  search(searchForm: SearchForm): Observable<Week[]> {\n    let params = new HttpParams();\n    params = params.set('start_day', searchForm.start);\n    params = params.set('end_day', searchForm.end);\n    params = params.set('mood', searchForm.mood);\n    params = params.set('search_term', searchForm.searchTerm);\n    return this.authService.currentUser.pipe(\n      switchMap(() => {\n        return this.http.get<Week[]>(SEARCH_URL, {\n          params: params,\n        });\n      })\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { SettingsService } from '../services/settings.service';\nimport { SET_LANGUAGE_URL } from '../shared/api-urls';\nimport { AVAILABLE_LANGUAGES } from './../shared/language';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent {\n  selectedLanguage: string;\n  languages = AVAILABLE_LANGUAGES;\n  colorsEnabled: Observable<boolean>;\n\n  constructor(\n    private http: HttpClient,\n    private translocoService: TranslocoService,\n    private snackBar: MatSnackBar,\n    private settingsService: SettingsService\n  ) {\n    this.selectedLanguage = translocoService.getActiveLang();\n    this.colorsEnabled = this.settingsService.colorsEnabled;\n  }\n\n  onLanguageSelectionChange(language: string): void {\n    this.http\n      .post<void>(SET_LANGUAGE_URL, {\n        language: language,\n      })\n      .subscribe(() =>\n        this.snackBar.open('Settings saved', 'Close', {\n          duration: 3 * 1000,\n        })\n      );\n\n    this.translocoService.setActiveLang(language);\n  }\n\n  onColorsEnabledChange(enabled: boolean): void {\n    this.settingsService.setColorsEnabled(enabled);\n  }\n}\n","<h1>{{ \"settings\" | transloco }}</h1>\n\n<!-- Language setting -->\n<div fxLayout=\"column\" fxLayoutGap=\"2.5rem\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>{{ \"language\" | transloco }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <mat-select\n        [(value)]=\"selectedLanguage\"\n        (selectionChange)=\"onLanguageSelectionChange($event.value)\"\n      >\n        <mat-option *ngFor=\"let language of languages\" [value]=\"language\">\n          {{ language }}\n        </mat-option>\n      </mat-select>\n    </mat-card-content>\n  </mat-card>\n\n  <!-- Mood button colors -->\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>{{ \"colors_enabled\" | transloco }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <mat-slide-toggle\n        class=\"space-right\"\n        [checked]=\"colorsEnabled | async\"\n        (change)=\"onColorsEnabledChange($event.checked)\"\n      >\n        <mat-hint>{{ \"colors_enabled_label\" | transloco }}</mat-hint>\n      </mat-slide-toggle>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { environment } from './../../environments/environment.prod';\n\nexport const LOGIN_URL = `${environment.backendApiUrl}/dj-rest-auth/login/`;\n\nexport const VERIFY_URL = `${environment.backendApiUrl}/dj-rest-auth/token/verify/`;\n\nexport const LOGOUT_URL = `${environment.backendApiUrl}/dj-rest-auth/logout/`;\n\nexport const ENTRY_DATE_URL = `${environment.backendApiUrl}/api/entry-day/`;\n\nexport const SAVE_NOTE_URL = `${environment.backendApiUrl}/api/save-note/`;\n\nexport const MOOD_TABLE_URL = `${environment.backendApiUrl}/api/mood-table/`;\n\nexport const STANDOUT_DATA_URL = `${environment.backendApiUrl}/api/standout-data/`;\n\nexport const SCATTER_GRAPH_URL = `${environment.backendApiUrl}/api/scatter-graph/`;\n\nexport const PIE_CHART_GRAPH_URL = `${environment.backendApiUrl}/api/pie-chart-graph/`;\n\nexport const SEARCH_URL = `${environment.backendApiUrl}/api/search/`;\n\nexport const JSON_CATALOG_URL = `${environment.backendApiUrl}/jsoni18n/`;\n\nexport const SET_LANGUAGE_URL = `${environment.backendApiUrl}/api/set-language/`;\n","import { Component, Input } from '@angular/core';\nimport { ErrorMsg } from '../error-msg';\n\n@Component({\n  selector: 'app-error-msg',\n  templateUrl: './error-msg.component.html',\n  styleUrls: ['./error-msg.component.scss'],\n})\nexport class ErrorMsgComponent {\n  @Input() error: ErrorMsg | null = null;\n}\n","<mat-card *ngIf=\"error\">\n  <mat-card-title>\n    {{ error.title }}\n  </mat-card-title>\n  <mat-card-content>\n    <code>\n      {{ error.detail }}\n    </code>\n  </mat-card-content>\n</mat-card>\n","export enum Forms {\n  NIGHT = 'night',\n  DAY = 'day',\n}\n","export const AVAILABLE_LANGUAGES = ['en-gb', 'de-de'];\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  exports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatButtonToggleModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n  ],\n})\nexport class MaterialMetaModule {}\n","export enum Messages {\n  RELOAD = 'reload',\n}\n","export enum Moods {\n  VERY_BAD = 1,\n  BAD = 2,\n  MEDIUM = 3,\n  GOOD = 4,\n  VERY_GOOD = 5,\n}\n","export const PAGE_SIZE_OPTIONS = [4, 10, 20, 50];\n\nexport const PAGINATION_TO = 4;\n","export enum Periods {\n  NIGHT = 'mood_night',\n  DAY = 'mood_day',\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'enumToArray',\n})\nexport class EnumToArrayPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  transform(data: Object): string[] {\n    const keys = Object.keys(data);\n    return keys.slice(0, keys.length / 2).reverse();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'enumValue',\n})\nexport class EnumValuePipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  transform(forms: Object): string[] {\n    return Object.values(forms).map((v) => String(v));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Moods } from '../model/sk/moods';\n\n@Pipe({\n  name: 'moodEnum',\n})\nexport class MoodEnumPipe implements PipeTransform {\n  transform(key: string): string {\n    return Moods[+key].toLowerCase();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'repeatChar',\n})\nexport class RepeatCharPipe implements PipeTransform {\n  transform(value: string, count: number): string {\n    return value.repeat(count);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parse } from 'date-fns';\n\n@Pipe({\n  name: 'strToDate',\n})\nexport class StrToDatePipe implements PipeTransform {\n  transform(value: string): Date {\n    return parse(value, 'yyyy-MM-dd', new Date());\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { addWeeks, parse } from 'date-fns';\n\n@Pipe({\n  name: 'strToWeekEndDate',\n})\nexport class StrToWeekEndDatePipe implements PipeTransform {\n  transform(value: string): Date {\n    return addWeeks(parse(value, 'yyyy-MM-dd', new Date()), 1);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { format, parse } from 'date-fns';\n\n@Pipe({\n  name: 'weekNumber',\n})\nexport class WeekNumberPipe implements PipeTransform {\n  /**\n   *\n   * @param value Date in yyyy-MM-dd format\n   * @returns The week number of value\n   */\n  transform(value: string): string {\n    return format(parse(value, 'yyyy-MM-dd', new Date()), 'I');\n  }\n}\n","export const QP_START_DAY = 'start_day';\n","import { NativeDateAdapter } from '@angular/material/core';\n\nexport class SkDateAdapter extends NativeDateAdapter {\n  override getFirstDayOfWeek(): number {\n    return 1;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, NgModule } from '@angular/core';\nimport {\n  Translation,\n  translocoConfig,\n  TranslocoLoader,\n  TranslocoModule,\n  TRANSLOCO_CONFIG,\n  TRANSLOCO_LOADER,\n} from '@ngneat/transloco';\nimport { map, Observable } from 'rxjs';\nimport { environment } from '../environments/environment.prod';\nimport { JSON_CATALOG_URL } from './shared/api-urls';\nimport { AVAILABLE_LANGUAGES } from './shared/language';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string): Observable<Translation> {\n    const url = `${JSON_CATALOG_URL}?lang=${lang}`;\n    return this.http\n      .get<Translation>(url)\n      .pipe(map((data) => <Translation>data['catalog']));\n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: AVAILABLE_LANGUAGES,\n        defaultLang: environment.defaultLanguage,\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      }),\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader },\n  ],\n})\nexport class TranslocoRootModule {}\n","export const environment = {\n  production: true,\n  backendApiUrl: 'http://punica:8000', // withouth trailing slash\n  defaultLanguage: 'de-de', // See AVAILABLE_LANGUAGES in ./shared/language\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // backendApiUrl: 'http://Hephaistos:8000', // withouth trailing slash\n  backendApiUrl: 'http://punica:8000', // withouth trailing slash\n  defaultLanguage: 'de-de', // See AVAILABLE_LANGUAGES in ./shared/language\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"names":["map","Observable","i0","ctx_r2","BottomBarComponent","constructor","authService","username","currentUser","pipe","user","onLogout","logout","selectors","decls","vars","consts","template","Moods","Periods","chartOptions_r1","PieChartComponent","skService","translocoService","ngOnInit","chartOptions$","getPieChartGraph","period","data","chartOptions","defaultGraph","series","values","labels","label_numbers","forEach","val","push","translate","toLowerCase","setHeader","DAY","header","NIGHT","chart","width","type","responsive","breakpoint","options","legend","position","theme","mode","viewQuery","ScatterPlotComponent","getScatterGraph","xaxis","categories","i","x","name","y","day","night","height","zoom","enabled","colors","dataLabels","stroke","curve","title","text","align","tooltip","grid","row","opacity","yaxis","formatter","value","addWeeks","format","parse","subWeeks","catchError","of","tap","NoteDialogComponent","Forms","Messages","QP_START_DAY","moodTable_r2","ctx_r13","ctx_r15","ctx_r16","SK_DATE_FORMAT","HomeComponent","dialog","msgService","route","router","Date","standoutData$","getStandoutData","buildMsgListener","queryParams","subscribe","params","hasOwnProperty","currentWeek","loadEntries","handleKeyDown","$event","inputElement","target","tagName","ctrlKey","metaKey","altKey","key","openNoteDialog","prevWeek","nextWeek","preventDefault","moodTable$","moodTable","dialogRef","open","week_date","week","note","afterClosed","sendMessage","RELOAD","navigate","then","getMoodTable","err","error","detail","message","loading","getMessages","msg","hostBindings","ctx","Breakpoints","MoodEntryComponent","breakpointObserver","settingsService","colorsEnabled","form","selectedVal","String","entry","mood_night","mood_day","checkMobile","isMobile$","observe","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","breakpoints","getCoverCssClass","onButtonToggleClick","mood","buttonsDisabled","saveEntry","inputs","ctx_r4","NavbarComponent","loggedIn","isLoggedIn","FormControl","FormGroup","PAGE_SIZE_OPTIONS","PAGINATION_TO","ctx_r9","SearchComponent","start","end","queryParamMap","get","searchTerm","sf","weeks$","search","range","valueChanges","event","start_day","queryParamsHandling","end_day","onSelectionChange","getPaginatorData","paginationFrom","pageIndex","pageSize","paginationTo","_r0","SET_LANGUAGE_URL","AVAILABLE_LANGUAGES","SettingsComponent","http","snackBar","selectedLanguage","getActiveLang","onLanguageSelectionChange","language","post","duration","setActiveLang","onColorsEnabledChange","setColorsEnabled"],"sourceRoot":"webpack:///"}